{"version":3,"sources":["chatapp/alert.mp3","chatapp/form.jsx","chatapp/home.jsx","chatapp/router.jsx","index.js"],"names":["module","exports","Form","state","username","Paper","className","Typography","variant","gutterBottom","component","Grid","container","justify","alignItems","style","marginTop","item","xs","TextField","label","size","width","onChange","e","setState","target","value","props","setUsername","onKeyDown","keyCode","indexOf","history","push","sm","Button","color","disabled","this","onClick","Component","withRouter","Home","connected","messages","src","activeMsg","persons","users","dialogOpen","emojiObj","emojiPickerOpen","componentDidUpdate","scrollIntoViewmsg","window","onhashchange","alert","componentDidMount","socket","io","on","name","i","o","msg","console","log","k","audioref","current","play","data","message","otherusers","filter","obj","Object","keys","length","values","image","submitName","componentWillUnmount","emit","chatboxRef","scrollIntoView","behavior","sendMessage","handleImage","freader","FileReader","readAsDataURL","files","onload","event","result","handleUserDialog","AOS","init","duration","selectEmoji","emoji","handleEmojiPicker","React","createRef","elevation","data-aos","display","require","ref","padding","align","fontWeight","Divider","map","Avatar","alt","toUpperCase","height","marginLeft","backgroundColor","paddingLeft","direction","margin","paddingTop","cursor","overflowY","overflowX","index","spacing","htmlFor","type","id","accept","position","autoFocus","placeholder","Hidden","xsDown","smUp","Fab","fontSize","Dialog","open","onClose","DialogContent","onEmojiClick","background","Routing","basename","location","pathname","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6538275.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alert.9fd5812c.mp3\";","import React, { Component } from \"react\";\r\nimport { Paper, TextField, Button, Grid, Typography } from \"@material-ui/core\";\r\nimport \"./css/chat.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    username: \"\",\r\n  };\r\n  render() {\r\n    return (\r\n      <Paper className=\"form-paper\">\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Chat with random strangers\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\r\n          Welcome to the Quickchatzz free Chat Roulette.You Must be 13+ to start\r\n          a random chat with stranger.\r\n          <br />\r\n          How to chat with strangers safely?\r\n          <br />\r\n          Don't share your personal information or contacts,don't send any money\r\n          to strangers.\r\n          <br />\r\n          Enjoy the Quickchatzz!\r\n          <br />\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n          style={{ marginTop: \"20px\" }}\r\n        >\r\n          <Grid item xs={9}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Username\"\r\n              size=\"small\"\r\n              style={{ width: \"100%\" }}\r\n              onChange={(e) => {\r\n                this.setState({ username: e.target.value });\r\n                this.props.setUsername(e.target.value);\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (\r\n                  e.keyCode == 13 &&\r\n                  this.state.username !== \"\" &&\r\n                  this.state.username.indexOf(\" \") !== 0\r\n                ) {\r\n                  this.props.history.push(\"/room\");\r\n                }\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3} sm={2}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={\r\n                this.state.username == \"\" ||\r\n                this.state.username.indexOf(\" \") === 0\r\n              }\r\n              onClick={() => {\r\n                this.props.history.push(\"/room\");\r\n              }}\r\n            >\r\n              start\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Form);\r\n","import React, { Component } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  Fab,\r\n  Hidden,\r\n  Avatar,\r\n  DialogContent,\r\n  Dialog,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport \"./css/chat.css\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.chatboxRef = new React.createRef();\r\n    this.audioref = new React.createRef();\r\n  }\r\n\r\n  state = {\r\n    connected: false,\r\n    messages: [],\r\n    src: null,\r\n    username: \"saiteja\",\r\n    activeMsg: \"\",\r\n    persons: 0,\r\n    users: [],\r\n    dialogOpen: false,\r\n    emojiObj: null,\r\n    emojiPickerOpen: false,\r\n  };\r\n  componentDidUpdate = () => {\r\n    this.scrollIntoViewmsg();\r\n    window.onhashchange = () => {\r\n      alert(\"gg\");\r\n    };\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.socket = io(\"https://chat-app-using-node.herokuapp.com\"); //https://chat-app-using-node.herokuapp.com\r\n    this.socket.on(\"new-other-user-connected\", (name) => {\r\n      for (var i = 0; i < 1; i++) {\r\n        var o = {\r\n          name: name,\r\n          msg: \"Joined\",\r\n        };\r\n        //update the users list as other user joins\r\n        var users = this.state.users;\r\n        users.push(name);\r\n        console.log(users);\r\n        this.setState({ users });\r\n        //update the message list as other users join\r\n        var messages = this.state.messages;\r\n        messages.push(o);\r\n        this.setState({ messages });\r\n\r\n        //add the wish messages to the messages list\r\n        var k = {\r\n          name: \"Chat bot\",\r\n          msg: \"Hello \" + name + \",Welcome to the saiteja's chat room\",\r\n        };\r\n        var messages = this.state.messages;\r\n        messages.push(k);\r\n        this.setState({ messages });\r\n        this.setState({ persons: this.state.persons + 1 });\r\n        this.audioref.current.play();\r\n      }\r\n    });\r\n\r\n    //update the messages list as other users sends message\r\n    this.socket.on(\"msg-by-other\", (data) => {\r\n      for (var i = 0; i < 1; i++) {\r\n        var o = {\r\n          name: data.name,\r\n          msg: data.message,\r\n        };\r\n\r\n        var messages = this.state.messages;\r\n        messages.push(o);\r\n        this.setState({ messages });\r\n        this.audioref.current.play();\r\n      }\r\n    });\r\n    //update the messaages list as other users disconnects\r\n    this.socket.on(\"disconnected\", (name) => {\r\n      //show the message when other user has left\r\n      var o = {\r\n        name: name,\r\n        msg: \"left\",\r\n      };\r\n      var messages = this.state.messages;\r\n      messages.push(o);\r\n      this.setState({ messages });\r\n      //remove the user disconnected from the chat\r\n      var users = this.state.users;\r\n      var otherusers = users.filter((e) => e != name);\r\n      console.log(otherusers);\r\n      this.setState({ users: otherusers });\r\n\r\n      this.setState({ persons: this.state.persons - 1 });\r\n    });\r\n    //set the number of users in the chat room\r\n    this.socket.on(\"number-of-users\", (obj) => {\r\n      var persons = Object.keys(obj).length;\r\n      this.setState({ persons });\r\n      var users = Object.values(obj);\r\n      this.setState({ users });\r\n      console.log(users);\r\n    });\r\n    //wish the other  user joined\r\n    this.socket.on(\"wish-message\", (name) => {\r\n      var o = {\r\n        name: \"Chat Bot\",\r\n        msg: \"Hello \" + name + \",Welcome to the saiteja's chat room\",\r\n      };\r\n      var messages = this.state.messages;\r\n      messages.push(o);\r\n      this.setState({ messages });\r\n      this.audioref.current.play();\r\n    });\r\n\r\n    //when other user posts image\r\n    this.socket.on(\"add-image\", (data) => {\r\n      var k = {\r\n        name: data.name,\r\n        msg: \"image\",\r\n        src: data.image,\r\n      };\r\n      var messages = this.state.messages;\r\n      messages.push(k);\r\n      this.setState({ messages });\r\n      this.audioref.current.play();\r\n    });\r\n    this.setState({ username: this.props.username });\r\n    this.submitName();\r\n  };\r\n\r\n  //disconnect user when pushed to back\r\n  componentWillUnmount = () => {\r\n    this.socket.emit(\"disconnected-force\", this.state.username);\r\n  };\r\n\r\n  //scroll last msg into view\r\n  scrollIntoViewmsg = () => {\r\n    this.chatboxRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  //submit the name\r\n  submitName = () => {\r\n    var o = {\r\n      name: \"You \",\r\n      msg: \"Joined\",\r\n    };\r\n    //add the user in the list\r\n    var users = this.state.users;\r\n    users.push(this.props.username);\r\n    console.log(users);\r\n    this.setState({ users });\r\n\r\n    //updata the messsages list when user joins\r\n    var messages = this.state.messages;\r\n    messages.push(o);\r\n    this.setState({ messages });\r\n    this.setState({ connected: true });\r\n    //inform other users that a user has joined\r\n    this.socket.emit(\"new-user-connected\", this.props.username);\r\n  };\r\n\r\n  //send the message\r\n  sendMessage = () => {\r\n    if (\r\n      this.state.activeMsg !== \"\" &&\r\n      this.state.activeMsg.indexOf(\" \") !== \"\"\r\n    ) {\r\n      this.scrollIntoViewmsg();\r\n      var o = {\r\n        name: \"You\",\r\n        msg: this.state.activeMsg,\r\n      };\r\n      var messages = this.state.messages;\r\n      messages.push(o);\r\n      console.log(messages);\r\n      this.setState({ messages });\r\n      this.socket.emit(\"send-message\", this.state.activeMsg);\r\n      this.setState({ activeMsg: \"\" });\r\n    }\r\n  };\r\n\r\n  //handle the file changed\r\n  handleImage = (e) => {\r\n    var freader = new FileReader();\r\n    freader.readAsDataURL(e.target.files[0]);\r\n    freader.onload = (event) => {\r\n      this.setState({ src: event.target.result });\r\n      var k = {\r\n        name: \"You\",\r\n        msg: \"image\",\r\n        src: event.target.result,\r\n      };\r\n      var messages = this.state.messages;\r\n      messages.push(k);\r\n      this.setState({ messages });\r\n      this.socket.emit(\"user-image\", {\r\n        name: this.props.username,\r\n        image: event.target.result,\r\n      });\r\n    };\r\n  };\r\n\r\n  //handle the dialog\r\n  handleUserDialog = () => {\r\n    this.setState({ dialogOpen: !this.state.dialogOpen });\r\n    AOS.init({ duration: 2000 });\r\n  };\r\n\r\n  //add Emoji to the text\r\n  selectEmoji = (e, emojiObj) => {\r\n    var activeMsg = this.state.activeMsg;\r\n    activeMsg = activeMsg + emojiObj.emoji;\r\n    this.setState({ activeMsg });\r\n  };\r\n\r\n  //handle emoji picker\r\n  handleEmojiPicker = () => {\r\n    this.setState({ emojiPickerOpen: !this.state.emojiPickerOpen });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Paper className=\"chat-paper\" elevation={3}>\r\n          <div\r\n            data-aos=\"fade\"\r\n            style={\r\n              this.state.dialogOpen ? { display: \"block\" } : { display: \"none\" }\r\n            }\r\n            className=\"user-dialog\"\r\n          >\r\n            <audio src={require(\"./alert.mp3\")} ref={this.audioref} />\r\n            <Grid\r\n              item\r\n              container\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              style={{ padding: \"4px 0px\" }}\r\n            >\r\n              <Grid item xs={2}></Grid>\r\n              <Grid item xs={8}>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  align=\"center\"\r\n                  gutterBottom\r\n                  style={{ fontWeight: \"bold\" }}\r\n                >\r\n                  {this.state.persons} Participants\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <CloseIcon\r\n                  size=\"small\"\r\n                  onClick={this.handleUserDialog}\r\n                  className=\"close-icon\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Divider />\r\n            {this.state.users.map((e) => (\r\n              <>\r\n                <Grid container alignItems=\"center\" style={{ padding: \" 6px\" }}>\r\n                  <Grid item xs={2} sm={1}>\r\n                    <Avatar\r\n                      src=\"https://sda.com\"\r\n                      alt={e.toUpperCase()}\r\n                      style={{\r\n                        width: \"35px\",\r\n                        height: \"35px\",\r\n                        marginLeft: \"4px\",\r\n                        color: \"white\",\r\n                        backgroundColor: \"rgb(48, 48, 150)\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={10} sm={11} className=\"users\">\r\n                    <Typography variant=\"body1\" style={{ paddingLeft: \"4px\" }}>\r\n                      {e}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Divider />\r\n              </>\r\n            ))}\r\n          </div>\r\n          <Grid\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n            }}\r\n            direction=\"column\"\r\n          >\r\n            <Grid\r\n              item\r\n              container\r\n              className=\"chat-nav\"\r\n              xs={12}\r\n              style={{ height: \"10%\" }}\r\n            >\r\n              <Grid item xs={1}>\r\n                <GroupIcon\r\n                  size=\"small\"\r\n                  style={{ color: \"white\", margin: \"10px 13px\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={9} sm={10} style={{ paddingLeft: \"10px\" }}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  style={{\r\n                    color: \"white\",\r\n                    paddingLeft: \"10px\",\r\n                    paddingTop: \"4px\",\r\n                  }}\r\n                >\r\n                  Group Chat\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"p\"\r\n                  style={{ color: \"white\", paddingLeft: \"10px\" }}\r\n                  gutterBottom\r\n                >\r\n                  {this.state.persons <= 1\r\n                    ? \"Only you in the chat Room\"\r\n                    : `You and ${this.state.persons - 1} others in the Room`}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <InfoIcon\r\n                  size=\"small\"\r\n                  style={{\r\n                    color: \"white\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={this.handleUserDialog}\r\n                  className=\"info-icon\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{\r\n                overflowY: \"scroll\",\r\n                overflowX: \"hidden\",\r\n                height: \"80%\",\r\n              }}\r\n            >\r\n              {this.state.messages.map((e, index) => {\r\n                if (e.msg == \"Joined\" || e.msg == \"left\") {\r\n                  return (\r\n                    <div className=\"joined-msg\">\r\n                      {e.name} {e.msg}\r\n                    </div>\r\n                  );\r\n                } else if (e.msg == \"image\" && e.name == \"You\") {\r\n                  return (\r\n                    <div className=\"image-by-admin\">\r\n                      <img src={e.src} />\r\n                    </div>\r\n                  );\r\n                } else if (e.msg == \"image\" && e.name != \"You\") {\r\n                  return (\r\n                    <div className=\"image-by-other\">\r\n                      <div className=\"sender-name\">\r\n                        <Typography variant=\"body2\">{e.name}</Typography>{\" \"}\r\n                      </div>\r\n                      <img src={e.src} />\r\n                    </div>\r\n                  );\r\n                } else if (e.name == \"You\") {\r\n                  return (\r\n                    <div className=\"msg-by-admin\">\r\n                      <Typography variant=\"body2\">{e.msg}</Typography>\r\n                    </div>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <div className=\"msg-by-other\">\r\n                      <div className=\"sender-name\">\r\n                        <Typography variant=\"body2\">{e.name}</Typography>{\" \"}\r\n                      </div>\r\n\r\n                      <Typography variant=\"body2\">{e.msg}</Typography>\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n              <div style={{ width: \"100%\" }} ref={this.chatboxRef}></div>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ height: \"12%\", padding: \"0px 6px\", paddingTop: \"10px\" }}\r\n              className=\"bottom-grid\"\r\n            >\r\n              <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n              >\r\n                <Grid item xs={1}>\r\n                  <label htmlFor=\"myInput\">\r\n                    <CameraAltIcon\r\n                      style={{\r\n                        color: \"white\",\r\n                        cursor: \"pointer\",\r\n                        marginTop: \"4px\",\r\n                      }}\r\n                      size=\"small\"\r\n                      className=\"camera-icon\"\r\n                    />\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    style={{ display: \"none\" }}\r\n                    id=\"myInput\"\r\n                    onChange={this.handleImage}\r\n                    accept=\"image/*\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={9} style={{ position: \"relative\" }}>\r\n                  <EmojiEmotionsIcon\r\n                    size=\"small\"\r\n                    className=\"emoji-icon\"\r\n                    style={{ position: \"absolute\" }}\r\n                    onClick={this.handleEmojiPicker}\r\n                  />\r\n                  <input\r\n                    autoFocus\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Message..\"\r\n                    value={this.state.activeMsg}\r\n                    onChange={(e) => {\r\n                      this.setState({ activeMsg: e.target.value });\r\n                    }}\r\n                    onKeyDown={(e) => {\r\n                      if (e.keyCode == 13) {\r\n                        this.sendMessage();\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2} sm={2}>\r\n                  <Hidden xsDown>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      variant=\"contained\"\r\n                      onClick={this.sendMessage}\r\n                    >\r\n                      Send\r\n                    </Button>\r\n                  </Hidden>\r\n                  <Hidden smUp>\r\n                    <Fab\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      style={{ width: \"35px\", height: \"20px\" }}\r\n                      onClick={this.sendMessage}\r\n                    >\r\n                      <SendIcon style={{ fontSize: \"0.9rem\" }} color=\"white\" />\r\n                    </Fab>\r\n                  </Hidden>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Dialog\r\n            open={this.state.emojiPickerOpen}\r\n            onClose={this.handleEmojiPicker}\r\n          >\r\n            <DialogContent>\r\n              <div className=\"emoji-picker-div\">\r\n                <Picker\r\n                  onEmojiClick={this.selectEmoji}\r\n                  className=\"picker\"\r\n                  style={{ background: \"green\" }}\r\n                />\r\n              </div>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </Paper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Form from \"./form\";\r\nimport Home from \"./home\";\r\n\r\nclass Routing extends Component {\r\n  state = {\r\n    username: \"\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={window.location.pathname || \"\"}>\r\n        <Route path=\"/\" exact>\r\n          <Form\r\n            setUsername={(username) => {\r\n              this.setState({ username: username });\r\n            }}\r\n          />\r\n        </Route>\r\n        <Route path=\"/room\" exact>\r\n          <Home username={this.state.username} />\r\n        </Route>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routing;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import Routing from \"./randomchat/router\";\r\nimport Routing from \"./chatapp/router\";\r\nReactDOM.render(<Routing />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}